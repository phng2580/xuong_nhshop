{
  "version": 3,
  "sources": ["../../basic-auth/node_modules/safe-buffer/index.js", "../../basic-auth/index.js", "../../morgan/node_modules/on-finished/index.js", "../../on-headers/index.js", "../../morgan/index.js"],
  "sourcesContent": ["/* eslint-disable node/no-deprecated-api */\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\n// alternative to using Object.keys for old browsers\r\nfunction copyProps (src, dst) {\r\n  for (var key in src) {\r\n    dst[key] = src[key]\r\n  }\r\n}\r\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\r\n  module.exports = buffer\r\n} else {\r\n  // Copy properties from require('buffer')\r\n  copyProps(buffer, exports)\r\n  exports.Buffer = SafeBuffer\r\n}\r\n\r\nfunction SafeBuffer (arg, encodingOrOffset, length) {\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\n// Copy static methods from Buffer\r\ncopyProps(Buffer, SafeBuffer)\r\n\r\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\r\n  if (typeof arg === 'number') {\r\n    throw new TypeError('Argument must not be a number')\r\n  }\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\nSafeBuffer.alloc = function (size, fill, encoding) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  var buf = Buffer(size)\r\n  if (fill !== undefined) {\r\n    if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n  } else {\r\n    buf.fill(0)\r\n  }\r\n  return buf\r\n}\r\n\r\nSafeBuffer.allocUnsafe = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return Buffer(size)\r\n}\r\n\r\nSafeBuffer.allocUnsafeSlow = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return buffer.SlowBuffer(size)\r\n}\r\n", "/*!\r\n * basic-auth\r\n * Copyright(c) 2013 TJ Holowaychuk\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar Buffer = require('safe-buffer').Buffer\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = auth\r\nmodule.exports.parse = parse\r\n\r\n/**\r\n * RegExp for basic auth credentials\r\n *\r\n * credentials = auth-scheme 1*SP token68\r\n * auth-scheme = \"Basic\" ; case insensitive\r\n * token68     = 1*( ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \"+\" / \"/\" ) *\"=\"\r\n * @private\r\n */\r\n\r\nvar CREDENTIALS_REGEXP = /^ *(?:[Bb][Aa][Ss][Ii][Cc]) +([A-Za-z0-9._~+/-]+=*) *$/\r\n\r\n/**\r\n * RegExp for basic auth user/pass\r\n *\r\n * user-pass   = userid \":\" password\r\n * userid      = *<TEXT excluding \":\">\r\n * password    = *TEXT\r\n * @private\r\n */\r\n\r\nvar USER_PASS_REGEXP = /^([^:]*):(.*)$/\r\n\r\n/**\r\n * Parse the Authorization header field of a request.\r\n *\r\n * @param {object} req\r\n * @return {object} with .name and .pass\r\n * @public\r\n */\r\n\r\nfunction auth (req) {\r\n  if (!req) {\r\n    throw new TypeError('argument req is required')\r\n  }\r\n\r\n  if (typeof req !== 'object') {\r\n    throw new TypeError('argument req is required to be an object')\r\n  }\r\n\r\n  // get header\r\n  var header = getAuthorization(req)\r\n\r\n  // parse header\r\n  return parse(header)\r\n}\r\n\r\n/**\r\n * Decode base64 string.\r\n * @private\r\n */\r\n\r\nfunction decodeBase64 (str) {\r\n  return Buffer.from(str, 'base64').toString()\r\n}\r\n\r\n/**\r\n * Get the Authorization header from request object.\r\n * @private\r\n */\r\n\r\nfunction getAuthorization (req) {\r\n  if (!req.headers || typeof req.headers !== 'object') {\r\n    throw new TypeError('argument req is required to have headers property')\r\n  }\r\n\r\n  return req.headers.authorization\r\n}\r\n\r\n/**\r\n * Parse basic auth to object.\r\n *\r\n * @param {string} string\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction parse (string) {\r\n  if (typeof string !== 'string') {\r\n    return undefined\r\n  }\r\n\r\n  // parse header\r\n  var match = CREDENTIALS_REGEXP.exec(string)\r\n\r\n  if (!match) {\r\n    return undefined\r\n  }\r\n\r\n  // decode user pass\r\n  var userPass = USER_PASS_REGEXP.exec(decodeBase64(match[1]))\r\n\r\n  if (!userPass) {\r\n    return undefined\r\n  }\r\n\r\n  // return credentials object\r\n  return new Credentials(userPass[1], userPass[2])\r\n}\r\n\r\n/**\r\n * Object to represent user credentials.\r\n * @private\r\n */\r\n\r\nfunction Credentials (name, pass) {\r\n  this.name = name\r\n  this.pass = pass\r\n}\r\n", "/*!\r\n * on-finished\r\n * Copyright(c) 2013 Jonathan Ong\r\n * Copyright(c) 2014 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = onFinished\r\nmodule.exports.isFinished = isFinished\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar first = require('ee-first')\r\n\r\n/**\r\n * Variables.\r\n * @private\r\n */\r\n\r\n/* istanbul ignore next */\r\nvar defer = typeof setImmediate === 'function'\r\n  ? setImmediate\r\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\r\n\r\n/**\r\n * Invoke callback when the response has finished, useful for\r\n * cleaning up resources afterwards.\r\n *\r\n * @param {object} msg\r\n * @param {function} listener\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction onFinished(msg, listener) {\r\n  if (isFinished(msg) !== false) {\r\n    defer(listener, null, msg)\r\n    return msg\r\n  }\r\n\r\n  // attach the listener to the message\r\n  attachListener(msg, listener)\r\n\r\n  return msg\r\n}\r\n\r\n/**\r\n * Determine if message is already finished.\r\n *\r\n * @param {object} msg\r\n * @return {boolean}\r\n * @public\r\n */\r\n\r\nfunction isFinished(msg) {\r\n  var socket = msg.socket\r\n\r\n  if (typeof msg.finished === 'boolean') {\r\n    // OutgoingMessage\r\n    return Boolean(msg.finished || (socket && !socket.writable))\r\n  }\r\n\r\n  if (typeof msg.complete === 'boolean') {\r\n    // IncomingMessage\r\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\r\n  }\r\n\r\n  // don't know\r\n  return undefined\r\n}\r\n\r\n/**\r\n * Attach a finished listener to the message.\r\n *\r\n * @param {object} msg\r\n * @param {function} callback\r\n * @private\r\n */\r\n\r\nfunction attachFinishedListener(msg, callback) {\r\n  var eeMsg\r\n  var eeSocket\r\n  var finished = false\r\n\r\n  function onFinish(error) {\r\n    eeMsg.cancel()\r\n    eeSocket.cancel()\r\n\r\n    finished = true\r\n    callback(error)\r\n  }\r\n\r\n  // finished on first message event\r\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\r\n\r\n  function onSocket(socket) {\r\n    // remove listener\r\n    msg.removeListener('socket', onSocket)\r\n\r\n    if (finished) return\r\n    if (eeMsg !== eeSocket) return\r\n\r\n    // finished on first socket event\r\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\r\n  }\r\n\r\n  if (msg.socket) {\r\n    // socket already assigned\r\n    onSocket(msg.socket)\r\n    return\r\n  }\r\n\r\n  // wait for socket to be assigned\r\n  msg.on('socket', onSocket)\r\n\r\n  if (msg.socket === undefined) {\r\n    // node.js 0.8 patch\r\n    patchAssignSocket(msg, onSocket)\r\n  }\r\n}\r\n\r\n/**\r\n * Attach the listener to the message.\r\n *\r\n * @param {object} msg\r\n * @return {function}\r\n * @private\r\n */\r\n\r\nfunction attachListener(msg, listener) {\r\n  var attached = msg.__onFinished\r\n\r\n  // create a private single listener with queue\r\n  if (!attached || !attached.queue) {\r\n    attached = msg.__onFinished = createListener(msg)\r\n    attachFinishedListener(msg, attached)\r\n  }\r\n\r\n  attached.queue.push(listener)\r\n}\r\n\r\n/**\r\n * Create listener on message.\r\n *\r\n * @param {object} msg\r\n * @return {function}\r\n * @private\r\n */\r\n\r\nfunction createListener(msg) {\r\n  function listener(err) {\r\n    if (msg.__onFinished === listener) msg.__onFinished = null\r\n    if (!listener.queue) return\r\n\r\n    var queue = listener.queue\r\n    listener.queue = null\r\n\r\n    for (var i = 0; i < queue.length; i++) {\r\n      queue[i](err, msg)\r\n    }\r\n  }\r\n\r\n  listener.queue = []\r\n\r\n  return listener\r\n}\r\n\r\n/**\r\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\r\n *\r\n * @param {ServerResponse} res\r\n * @param {function} callback\r\n * @private\r\n */\r\n\r\nfunction patchAssignSocket(res, callback) {\r\n  var assignSocket = res.assignSocket\r\n\r\n  if (typeof assignSocket !== 'function') return\r\n\r\n  // res.on('socket', callback) is broken in 0.8\r\n  res.assignSocket = function _assignSocket(socket) {\r\n    assignSocket.call(this, socket)\r\n    callback(socket)\r\n  }\r\n}\r\n", "/*!\r\n * on-headers\r\n * Copyright(c) 2014 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = onHeaders\r\n\r\n/**\r\n * Create a replacement writeHead method.\r\n *\r\n * @param {function} prevWriteHead\r\n * @param {function} listener\r\n * @private\r\n */\r\n\r\nfunction createWriteHead (prevWriteHead, listener) {\r\n  var fired = false\r\n\r\n  // return function with core name and argument list\r\n  return function writeHead (statusCode) {\r\n    // set headers from arguments\r\n    var args = setWriteHeadHeaders.apply(this, arguments)\r\n\r\n    // fire listener\r\n    if (!fired) {\r\n      fired = true\r\n      listener.call(this)\r\n\r\n      // pass-along an updated status code\r\n      if (typeof args[0] === 'number' && this.statusCode !== args[0]) {\r\n        args[0] = this.statusCode\r\n        args.length = 1\r\n      }\r\n    }\r\n\r\n    return prevWriteHead.apply(this, args)\r\n  }\r\n}\r\n\r\n/**\r\n * Execute a listener when a response is about to write headers.\r\n *\r\n * @param {object} res\r\n * @return {function} listener\r\n * @public\r\n */\r\n\r\nfunction onHeaders (res, listener) {\r\n  if (!res) {\r\n    throw new TypeError('argument res is required')\r\n  }\r\n\r\n  if (typeof listener !== 'function') {\r\n    throw new TypeError('argument listener must be a function')\r\n  }\r\n\r\n  res.writeHead = createWriteHead(res.writeHead, listener)\r\n}\r\n\r\n/**\r\n * Set headers contained in array on the response object.\r\n *\r\n * @param {object} res\r\n * @param {array} headers\r\n * @private\r\n */\r\n\r\nfunction setHeadersFromArray (res, headers) {\r\n  for (var i = 0; i < headers.length; i++) {\r\n    res.setHeader(headers[i][0], headers[i][1])\r\n  }\r\n}\r\n\r\n/**\r\n * Set headers contained in object on the response object.\r\n *\r\n * @param {object} res\r\n * @param {object} headers\r\n * @private\r\n */\r\n\r\nfunction setHeadersFromObject (res, headers) {\r\n  var keys = Object.keys(headers)\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var k = keys[i]\r\n    if (k) res.setHeader(k, headers[k])\r\n  }\r\n}\r\n\r\n/**\r\n * Set headers and other properties on the response object.\r\n *\r\n * @param {number} statusCode\r\n * @private\r\n */\r\n\r\nfunction setWriteHeadHeaders (statusCode) {\r\n  var length = arguments.length\r\n  var headerIndex = length > 1 && typeof arguments[1] === 'string'\r\n    ? 2\r\n    : 1\r\n\r\n  var headers = length >= headerIndex + 1\r\n    ? arguments[headerIndex]\r\n    : undefined\r\n\r\n  this.statusCode = statusCode\r\n\r\n  if (Array.isArray(headers)) {\r\n    // handle array case\r\n    setHeadersFromArray(this, headers)\r\n  } else if (headers) {\r\n    // handle object case\r\n    setHeadersFromObject(this, headers)\r\n  }\r\n\r\n  // copy leading arguments\r\n  var args = new Array(Math.min(length, headerIndex))\r\n  for (var i = 0; i < args.length; i++) {\r\n    args[i] = arguments[i]\r\n  }\r\n\r\n  return args\r\n}\r\n", "/*!\r\n * morgan\r\n * Copyright(c) 2010 Sencha Inc.\r\n * Copyright(c) 2011 TJ Holowaychuk\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = morgan\r\nmodule.exports.compile = compile\r\nmodule.exports.format = format\r\nmodule.exports.token = token\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar auth = require('basic-auth')\r\nvar debug = require('debug')('morgan')\r\nvar deprecate = require('depd')('morgan')\r\nvar onFinished = require('on-finished')\r\nvar onHeaders = require('on-headers')\r\n\r\n/**\r\n * Array of CLF month names.\r\n * @private\r\n */\r\n\r\nvar CLF_MONTH = [\r\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n]\r\n\r\n/**\r\n * Default log buffer duration.\r\n * @private\r\n */\r\n\r\nvar DEFAULT_BUFFER_DURATION = 1000\r\n\r\n/**\r\n * Create a logger middleware.\r\n *\r\n * @public\r\n * @param {String|Function} format\r\n * @param {Object} [options]\r\n * @return {Function} middleware\r\n */\r\n\r\nfunction morgan (format, options) {\r\n  var fmt = format\r\n  var opts = options || {}\r\n\r\n  if (format && typeof format === 'object') {\r\n    opts = format\r\n    fmt = opts.format || 'default'\r\n\r\n    // smart deprecation message\r\n    deprecate('morgan(options): use morgan(' + (typeof fmt === 'string' ? JSON.stringify(fmt) : 'format') + ', options) instead')\r\n  }\r\n\r\n  if (fmt === undefined) {\r\n    deprecate('undefined format: specify a format')\r\n  }\r\n\r\n  // output on request instead of response\r\n  var immediate = opts.immediate\r\n\r\n  // check if log entry should be skipped\r\n  var skip = opts.skip || false\r\n\r\n  // format function\r\n  var formatLine = typeof fmt !== 'function'\r\n    ? getFormatFunction(fmt)\r\n    : fmt\r\n\r\n  // stream\r\n  var buffer = opts.buffer\r\n  var stream = opts.stream || process.stdout\r\n\r\n  // buffering support\r\n  if (buffer) {\r\n    deprecate('buffer option')\r\n\r\n    // flush interval\r\n    var interval = typeof buffer !== 'number'\r\n      ? DEFAULT_BUFFER_DURATION\r\n      : buffer\r\n\r\n    // swap the stream\r\n    stream = createBufferStream(stream, interval)\r\n  }\r\n\r\n  return function logger (req, res, next) {\r\n    // request data\r\n    req._startAt = undefined\r\n    req._startTime = undefined\r\n    req._remoteAddress = getip(req)\r\n\r\n    // response data\r\n    res._startAt = undefined\r\n    res._startTime = undefined\r\n\r\n    // record request start\r\n    recordStartTime.call(req)\r\n\r\n    function logRequest () {\r\n      if (skip !== false && skip(req, res)) {\r\n        debug('skip request')\r\n        return\r\n      }\r\n\r\n      var line = formatLine(morgan, req, res)\r\n\r\n      if (line == null) {\r\n        debug('skip line')\r\n        return\r\n      }\r\n\r\n      debug('log request')\r\n      stream.write(line + '\\n')\r\n    };\r\n\r\n    if (immediate) {\r\n      // immediate log\r\n      logRequest()\r\n    } else {\r\n      // record response start\r\n      onHeaders(res, recordStartTime)\r\n\r\n      // log when response finished\r\n      onFinished(res, logRequest)\r\n    }\r\n\r\n    next()\r\n  }\r\n}\r\n\r\n/**\r\n * Apache combined log format.\r\n */\r\n\r\nmorgan.format('combined', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\r\n\r\n/**\r\n * Apache common log format.\r\n */\r\n\r\nmorgan.format('common', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]')\r\n\r\n/**\r\n * Default format.\r\n */\r\n\r\nmorgan.format('default', ':remote-addr - :remote-user [:date] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\r\ndeprecate.property(morgan, 'default', 'default format: use combined format')\r\n\r\n/**\r\n * Short format.\r\n */\r\n\r\nmorgan.format('short', ':remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms')\r\n\r\n/**\r\n * Tiny format.\r\n */\r\n\r\nmorgan.format('tiny', ':method :url :status :res[content-length] - :response-time ms')\r\n\r\n/**\r\n * dev (colored)\r\n */\r\n\r\nmorgan.format('dev', function developmentFormatLine (tokens, req, res) {\r\n  // get the status code if response written\r\n  var status = headersSent(res)\r\n    ? res.statusCode\r\n    : undefined\r\n\r\n  // get status color\r\n  var color = status >= 500 ? 31 // red\r\n    : status >= 400 ? 33 // yellow\r\n      : status >= 300 ? 36 // cyan\r\n        : status >= 200 ? 32 // green\r\n          : 0 // no color\r\n\r\n  // get colored function\r\n  var fn = developmentFormatLine[color]\r\n\r\n  if (!fn) {\r\n    // compile\r\n    fn = developmentFormatLine[color] = compile('\\x1b[0m:method :url \\x1b[' +\r\n      color + 'm:status\\x1b[0m :response-time ms - :res[content-length]\\x1b[0m')\r\n  }\r\n\r\n  return fn(tokens, req, res)\r\n})\r\n\r\n/**\r\n * request url\r\n */\r\n\r\nmorgan.token('url', function getUrlToken (req) {\r\n  return req.originalUrl || req.url\r\n})\r\n\r\n/**\r\n * request method\r\n */\r\n\r\nmorgan.token('method', function getMethodToken (req) {\r\n  return req.method\r\n})\r\n\r\n/**\r\n * response time in milliseconds\r\n */\r\n\r\nmorgan.token('response-time', function getResponseTimeToken (req, res, digits) {\r\n  if (!req._startAt || !res._startAt) {\r\n    // missing request and/or response start time\r\n    return\r\n  }\r\n\r\n  // calculate diff\r\n  var ms = (res._startAt[0] - req._startAt[0]) * 1e3 +\r\n    (res._startAt[1] - req._startAt[1]) * 1e-6\r\n\r\n  // return truncated value\r\n  return ms.toFixed(digits === undefined ? 3 : digits)\r\n})\r\n\r\n/**\r\n * total time in milliseconds\r\n */\r\n\r\nmorgan.token('total-time', function getTotalTimeToken (req, res, digits) {\r\n  if (!req._startAt || !res._startAt) {\r\n    // missing request and/or response start time\r\n    return\r\n  }\r\n\r\n  // time elapsed from request start\r\n  var elapsed = process.hrtime(req._startAt)\r\n\r\n  // cover to milliseconds\r\n  var ms = (elapsed[0] * 1e3) + (elapsed[1] * 1e-6)\r\n\r\n  // return truncated value\r\n  return ms.toFixed(digits === undefined ? 3 : digits)\r\n})\r\n\r\n/**\r\n * current date\r\n */\r\n\r\nmorgan.token('date', function getDateToken (req, res, format) {\r\n  var date = new Date()\r\n\r\n  switch (format || 'web') {\r\n    case 'clf':\r\n      return clfdate(date)\r\n    case 'iso':\r\n      return date.toISOString()\r\n    case 'web':\r\n      return date.toUTCString()\r\n  }\r\n})\r\n\r\n/**\r\n * response status code\r\n */\r\n\r\nmorgan.token('status', function getStatusToken (req, res) {\r\n  return headersSent(res)\r\n    ? String(res.statusCode)\r\n    : undefined\r\n})\r\n\r\n/**\r\n * normalized referrer\r\n */\r\n\r\nmorgan.token('referrer', function getReferrerToken (req) {\r\n  return req.headers.referer || req.headers.referrer\r\n})\r\n\r\n/**\r\n * remote address\r\n */\r\n\r\nmorgan.token('remote-addr', getip)\r\n\r\n/**\r\n * remote user\r\n */\r\n\r\nmorgan.token('remote-user', function getRemoteUserToken (req) {\r\n  // parse basic credentials\r\n  var credentials = auth(req)\r\n\r\n  // return username\r\n  return credentials\r\n    ? credentials.name\r\n    : undefined\r\n})\r\n\r\n/**\r\n * HTTP version\r\n */\r\n\r\nmorgan.token('http-version', function getHttpVersionToken (req) {\r\n  return req.httpVersionMajor + '.' + req.httpVersionMinor\r\n})\r\n\r\n/**\r\n * UA string\r\n */\r\n\r\nmorgan.token('user-agent', function getUserAgentToken (req) {\r\n  return req.headers['user-agent']\r\n})\r\n\r\n/**\r\n * request header\r\n */\r\n\r\nmorgan.token('req', function getRequestToken (req, res, field) {\r\n  // get header\r\n  var header = req.headers[field.toLowerCase()]\r\n\r\n  return Array.isArray(header)\r\n    ? header.join(', ')\r\n    : header\r\n})\r\n\r\n/**\r\n * response header\r\n */\r\n\r\nmorgan.token('res', function getResponseHeader (req, res, field) {\r\n  if (!headersSent(res)) {\r\n    return undefined\r\n  }\r\n\r\n  // get header\r\n  var header = res.getHeader(field)\r\n\r\n  return Array.isArray(header)\r\n    ? header.join(', ')\r\n    : header\r\n})\r\n\r\n/**\r\n * Format a Date in the common log format.\r\n *\r\n * @private\r\n * @param {Date} dateTime\r\n * @return {string}\r\n */\r\n\r\nfunction clfdate (dateTime) {\r\n  var date = dateTime.getUTCDate()\r\n  var hour = dateTime.getUTCHours()\r\n  var mins = dateTime.getUTCMinutes()\r\n  var secs = dateTime.getUTCSeconds()\r\n  var year = dateTime.getUTCFullYear()\r\n\r\n  var month = CLF_MONTH[dateTime.getUTCMonth()]\r\n\r\n  return pad2(date) + '/' + month + '/' + year +\r\n    ':' + pad2(hour) + ':' + pad2(mins) + ':' + pad2(secs) +\r\n    ' +0000'\r\n}\r\n\r\n/**\r\n * Compile a format string into a function.\r\n *\r\n * @param {string} format\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction compile (format) {\r\n  if (typeof format !== 'string') {\r\n    throw new TypeError('argument format must be a string')\r\n  }\r\n\r\n  var fmt = String(JSON.stringify(format))\r\n  var js = '  \"use strict\"\\n  return ' + fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g, function (_, name, arg) {\r\n    var tokenArguments = 'req, res'\r\n    var tokenFunction = 'tokens[' + String(JSON.stringify(name)) + ']'\r\n\r\n    if (arg !== undefined) {\r\n      tokenArguments += ', ' + String(JSON.stringify(arg))\r\n    }\r\n\r\n    return '\" +\\n    (' + tokenFunction + '(' + tokenArguments + ') || \"-\") + \"'\r\n  })\r\n\r\n  // eslint-disable-next-line no-new-func\r\n  return new Function('tokens, req, res', js)\r\n}\r\n\r\n/**\r\n * Create a basic buffering stream.\r\n *\r\n * @param {object} stream\r\n * @param {number} interval\r\n * @public\r\n */\r\n\r\nfunction createBufferStream (stream, interval) {\r\n  var buf = []\r\n  var timer = null\r\n\r\n  // flush function\r\n  function flush () {\r\n    timer = null\r\n    stream.write(buf.join(''))\r\n    buf.length = 0\r\n  }\r\n\r\n  // write function\r\n  function write (str) {\r\n    if (timer === null) {\r\n      timer = setTimeout(flush, interval)\r\n    }\r\n\r\n    buf.push(str)\r\n  }\r\n\r\n  // return a minimal \"stream\"\r\n  return { write: write }\r\n}\r\n\r\n/**\r\n * Define a format with the given name.\r\n *\r\n * @param {string} name\r\n * @param {string|function} fmt\r\n * @public\r\n */\r\n\r\nfunction format (name, fmt) {\r\n  morgan[name] = fmt\r\n  return this\r\n}\r\n\r\n/**\r\n * Lookup and compile a named format function.\r\n *\r\n * @param {string} name\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction getFormatFunction (name) {\r\n  // lookup format\r\n  var fmt = morgan[name] || name || morgan.default\r\n\r\n  // return compiled format\r\n  return typeof fmt !== 'function'\r\n    ? compile(fmt)\r\n    : fmt\r\n}\r\n\r\n/**\r\n * Get request IP address.\r\n *\r\n * @private\r\n * @param {IncomingMessage} req\r\n * @return {string}\r\n */\r\n\r\nfunction getip (req) {\r\n  return req.ip ||\r\n    req._remoteAddress ||\r\n    (req.connection && req.connection.remoteAddress) ||\r\n    undefined\r\n}\r\n\r\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\r\n\r\nfunction headersSent (res) {\r\n  // istanbul ignore next: node.js 0.8 support\r\n  return typeof res.headersSent !== 'boolean'\r\n    ? Boolean(res._header)\r\n    : res.headersSent\r\n}\r\n\r\n/**\r\n * Pad number to two digits.\r\n *\r\n * @private\r\n * @param {number} num\r\n * @return {string}\r\n */\r\n\r\nfunction pad2 (num) {\r\n  var str = String(num)\r\n\r\n  // istanbul ignore next: num is current datetime\r\n  return (str.length === 1 ? '0' : '') + str\r\n}\r\n\r\n/**\r\n * Record the start time.\r\n * @private\r\n */\r\n\r\nfunction recordStartTime () {\r\n  this._startAt = process.hrtime()\r\n  this._startTime = new Date()\r\n}\r\n\r\n/**\r\n * Define a token function with the given name,\r\n * and callback fn(req, res).\r\n *\r\n * @param {string} name\r\n * @param {function} fn\r\n * @public\r\n */\r\n\r\nfunction token (name, fn) {\r\n  morgan[name] = fn\r\n  return this\r\n}\r\n"],
  "mappings": "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",
  "names": ["format"]
}
